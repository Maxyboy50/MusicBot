trigger: none

name: $(Build.DefinitionName)-$(Build.BuildId)

# What should the order be?
# Can't publish to a non-existent repository, may have to create manually? Or maybe with the aws cli
stages:
- stage: Build
  displayName: Build Docker image and publish
  jobs:
  - job: Build
    displayName: Build Docker image
    variables:
    - name: ecr_repository_name
      value: testrepo
    
    - name: aws_region
      value: us-east-2
    steps:
    - checkout: self

    - task: AzureKeyVault@2
      displayName: Retrieve AWS Credentials from Azure Key Vault
      inputs:
        azureSubscription: 'Azure RM Service Connection'
        KeyVaultName: 'AWSCredentialsVault'
        SecretsFilter: 'AWSAccessKey, AWSSecretKey'
        RunAsPreJob: true
    

    # - bash: |
    #     ACCOUNT_ID=$(aws sts get-caller-identity --query Account | tr -d '"')
    #     aws ecr get-login-password --region ${{ variables.aws_region }} | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.${{ variables.aws_region }}.amazonaws.com
    #   env:
    #     AWS_SECRET_ACCESS_KEY: $(AWSSecretKey)
    #     AWS_ACCESS_KEY_ID: $(AWSAccessKey)
    #   displayName: Login to ECR
    
    - bash: |
        REPOSITORY_URI=$(aws ecr describe-repositories --repository-names "${{ variables.ecr_repository_name }}" --query "repositories[0].repositoryUri" | tr -d '"') 
        docker pull $REPOSITORY_URI:latest
      env:
        AWS_SECRET_ACCESS_KEY: $(AWSSecretKey)
        AWS_ACCESS_KEY_ID: $(AWSAccessKey)
      displayName: Pull latest image for build caching

    - bash: |
        REPOSITORY_URI=$(aws ecr describe-repositories --repository-names "${{ variables.ecr_repository_name }}" --query "repositories[0].repositoryUri" | tr -d '"') 
        docker build -t $REPOSITORY_URI:latest --platform=linux/amd64 .
        docker push $REPOSITORY_URI:latest
      
      displayName: Build docker image and publish
      workingDirectory: $(Pipeline.Workspace)/s/
      env:
        AWS_SECRET_ACCESS_KEY: $(AWSSecretKey)
        AWS_ACCESS_KEY_ID: $(AWSAccessKey)

      
